/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package be.naturalsciences.bmdc.ears.options;

import java.awt.Color;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableColumnModel;

final class ActorsPanel extends javax.swing.JPanel implements TableModelListener {

    private final ActorsOptionsPanelController controller;

    private ActorTableModel model;

    ActorsPanel(ActorsOptionsPanelController controller) {
        this.controller = controller;
        initComponents();

        model = new ActorTableModel();
        model.addTableModelListener(this);
        o_actorTable.setModel(model);

        TableColumnModel tcm = o_actorTable.getColumnModel();
       // tcm.removeColumn(tcm.getColumn(0));
        jLabel1.setText("");

        o_actorTable.setCellSelectionEnabled(true);
        // TODO listen to changes in form fields and call controller.changed()
    }

    @Override
    public void tableChanged(TableModelEvent tme) {
        int firstRow = tme.getFirstRow();
        int lastRow = tme.getLastRow();
        int index = tme.getColumn();
        jLabel1.setText("");
        if (firstRow == ActorTableModel.ERROR && model.errors != null && !model.errors.isEmpty()) {
            jLabel1.setText("<html>" + String.join("<br />", model.errors.values()) + "</html>");
            jLabel1.setForeground(Color.red);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        o_removeActor = new javax.swing.JButton();
        o_addActor = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        o_actorTable = new javax.swing.JTable();

        org.openide.awt.Mnemonics.setLocalizedText(o_removeActor, org.openide.util.NbBundle.getMessage(ActorsPanel.class, "ActorsPanel.o_removeActor.text")); // NOI18N
        o_removeActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                o_removeActorActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(o_addActor, org.openide.util.NbBundle.getMessage(ActorsPanel.class, "ActorsPanel.o_addActor.text")); // NOI18N
        o_addActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                o_addActorActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ActorsPanel.class, "ActorsPanel.jLabel1.text")); // NOI18N

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        o_actorTable.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        o_actorTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(o_actorTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(451, 451, 451)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(o_removeActor, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(o_addActor))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(o_addActor)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(o_removeActor)
                    .addContainerGap(527, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void o_removeActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_o_removeActorActionPerformed

        int row = o_actorTable.getSelectedRow();
        if (row > -1) {
            model.removeRow(row);
        }
    }//GEN-LAST:event_o_removeActorActionPerformed

    private void o_addActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_o_addActorActionPerformed
        model.addEmptyRow();
    }//GEN-LAST:event_o_addActorActionPerformed

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(ActorsPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
  //      jCheckBox1.setSelected(Configs.getOverrideEventsAsAnonymous()); //no more anonymous events in ears3
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());

    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(ActorsPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(ActorsPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
        
//        Configs.persistOverrideEventsAsAnonymous(jCheckBox1.isSelected());
        model.fireLookupListeners();
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return model.errors.isEmpty();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable o_actorTable;
    private javax.swing.JButton o_addActor;
    private javax.swing.JButton o_removeActor;
    // End of variables declaration//GEN-END:variables
}
